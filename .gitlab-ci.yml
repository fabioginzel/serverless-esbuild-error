stages:
  - build
  - test
  - deploy
  - pos_deploy

build:
  stage: build
  image: node:14-alpine
  script:
    - npm install
  artifacts:
    expire_in: 2 hours
    paths:
      - node_modules
  cache:
    paths:
      - node_modules

test:
  stage: test
  image: node:14-alpine
  variables:
    AWS_REGION: "us-east-1"
    AWS_ACCESS_KEY_ID:  "nao-precisa"
    AWS_SECRET_ACCESS_KEY: "nao-precisa"
  services:
    - name: amazon/dynamodb-local:latest
      alias: dynamodb
    - name: s12v/sns
      alias: sns
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip3 install --upgrade pip 
    - pip3 install --no-cache-dir awscli 
    - rm -rf /var/cache/apk/*
    - aws sns --region us-east-1 --no-sign-request --endpoint-url http://sns:9911 create-topic --name mensageria-box
    - aws sns --region us-east-1 --no-sign-request --endpoint-url http://sns:9911 subscribe --topic-arn arn:aws:sns:us-east-1:123456789012:mensageria-box --protocol email --notification-endpoint email@example.com
  script:
    - npm run test:coverage
  dependencies:
    - build
  artifacts:
    paths:
      - coverage
    expire_in: 2 hours
  coverage: /All files\s*\|\s*([\d\.]+)/



type-check-lint:
  stage: test
  image: node:14-alpine
  script:
    - npm run lint
    - npm run type-check
  dependencies:
    - build


deploy production:
  stage: deploy
  image: node:14-alpine
  only:
      - tags
  dependencies:
    - build
  environment:
    name: production
    url: $URL
  before_script:
    - export NODE_OPTIONS="--max_old_space_size=8192"
    - npm install -g serverless
    - npm install
  script:
    - sls deploy --verbose --stage production




# deploy staging:
#   stage: deploy
#   image: node:14-alpine
#   only:
#     - master
#   dependencies:
#     - build
#   environment:
#     name: staging
#     url: $URL
#   before_script:
#     - export NODE_OPTIONS="--max_old_space_size=8192"
#     - npm install -g serverless
#     - npm install
#   script:
#     - sls deploy --verbose --stage staging
 
 
pages:
  stage: pos_deploy
  image: node:10
  before_script:
    - npm config set cache npm-cache --global
  script:
  - npm install -g redoc-cli@0.10.4
  - redoc-cli bundle -o public/index.html docs/openapi.yaml
  - cp docs/openapi.yaml public/openapi.yaml
  dependencies: []
  artifacts:
    paths:
    - public
  only:
    - master
  cache: 
    paths:
    - npm-cache